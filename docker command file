# Check Docker version
docker --version

# Start Docker service
sudo systemctl start docker

# Stop Docker service
sudo systemctl stop docker

# Restart Docker service
sudo systemctl restart docker

# Enable Docker to start on boot
sudo systemctl enable docker

# Check Docker service status
sudo systemctl status docker

# List running containers
docker ps

# List all containers (including stopped ones)
docker ps -a

# Pull an image from Docker Hub
docker pull <image-name>

# Run a container
docker run <options> <image-name>

# Run a container in detached mode
docker run -d <image-name>

# Run a container with a specific name
docker run --name <container-name> <image-name>

# Execute a command in a running container
docker exec -it <container-name> <command>

# Stop a running container
docker stop <container-name>

# Remove a container
docker rm <container-name>

# Remove a stopped container
docker container prune

# Remove an image
docker rmi <image-name>

# List Docker images
docker images

# Build an image from a Dockerfile
docker build -t <image-name> <path-to-dockerfile>

# Tag an image
docker tag <image-name> <new-image-name>

# Push an image to Docker Hub
docker push <image-name>

# View logs of a container
docker logs <container-name>

# View Docker system information
docker info

# Clean up unused images, containers, and networks
docker system prune

# List Docker networks
docker network ls

# Create a new network
docker network create <network-name>

# Remove a network
docker network rm <network-name>

# Inspect a network
docker network inspect <network-name>

# List Docker volumes
docker volume ls

# Create a new volume
docker volume create <volume-name>

# Remove a volume
docker volume rm <volume-name>

# Inspect a volume
docker volume inspect <volume-name>

# Save an image to a tar file
docker save -o <file-name>.tar <image-name>

# Load an image from a tar file
docker load -i <file-name>.tar

# Display detailed information about a container
docker inspect <container-name>

# Commit changes to a container and create a new image
docker commit <container-name> <new-image-name>

# Display the history of an image
docker history <image-name>

# View the processes running inside a container
docker top <container-name>

# Pause a running container
docker pause <container-name>

# Unpause a paused container
docker unpause <container-name>

# Check Docker daemon logs
journalctl -u docker

# Display Docker events
docker events

# Copy files/folders from a container to the host
docker cp <container-name>:<path-in-container> <path-on-host>

# Copy files/folders from the host to a container
docker cp <path-on-host> <container-name>:<path-in-container>

# Create a Docker service (for swarm mode)
docker service create <options> <image-name>

# List Docker services (for swarm mode)
docker service ls

# Scale a Docker service (for swarm mode)
docker service scale <service-name>=<replica-count>

# Remove a Docker service (for swarm mode)
docker service rm <service-name>
